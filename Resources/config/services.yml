parameters:
    list.per_page_options: 10;25;50

services:
  leadsfactory.time_configurator:
    class:        Tellaw\LeadsFactoryBundle\DependencyInjection\TimeConfigurator

  messages.utils:
    class:        Tellaw\LeadsFactoryBundle\Utils\Messages
    arguments:    [@session]

  lf.utils:
    class:        Tellaw\LeadsFactoryBundle\Utils\LFUtils
    calls:
                  - [ setContainer, [ @service_container ] ]

  scheduler.utils:
    class:        Tellaw\LeadsFactoryBundle\Utils\SchedulerUtils
    calls:
                  - [ setContainer, [ @service_container ] ]

  chart:
    class:        Tellaw\LeadsFactoryBundle\Utils\Chart
    calls:
                  - [ setContainer, [ @service_container ] ]

  export.logger:
    class:        Symfony\Bridge\Monolog\Logger
    arguments:    [app]
    calls:
                  - [pushHandler, [@export.logger_handler]]

  export.logger_handler:
    class:        Monolog\Handler\StreamHandler
    arguments:    [%kernel.logs_dir%/%kernel.environment%.export.log, 200]

  export_utils:
    class:        Tellaw\LeadsFactoryBundle\Utils\ExportUtils
    arguments:    [@leadsfactory.client_email_repository]
    calls:
                      - [ setContainer, [ @service_container ] ]

  preferences_utils:
    class:        Tellaw\LeadsFactoryBundle\Utils\PreferencesUtils
    calls:
                      - [ setContainer, [ @service_container ] ]

  csv_method:
    class:        Tellaw\LeadsFactoryBundle\Utils\Export\CSV
    calls:
                  - [ setContainer, [ @service_container ] ]
    tags:
                  - { name: export.method, alias: csv }

  entity_form:
    class:        Tellaw\LeadsFactoryBundle\Form\Type\FormType

  emailFieldType:
    class:        Tellaw\LeadsFactoryBundle\Utils\Fields\EmailFieldType

  form_utils:
    class:        Tellaw\LeadsFactoryBundle\Utils\FormUtils
    arguments:    [@leadsfactory.reference_list_repository, @router, @leadsfactory.field_factory]
    configurator: ["@leadsfactory.time_configurator", configure]

  leadsfactory.field_factory:
    class:        Tellaw\LeadsFactoryBundle\Utils\Fields\FieldFactory

  js_utils:
    class:        Tellaw\LeadsFactoryBundle\Utils\JsUtils
    calls:
                  - [ setContainer, [ @service_container ] ]

  alertes_utils:
    class:        Tellaw\LeadsFactoryBundle\Utils\AlertUtils
    arguments:    [@doctrine.orm.entity_manager, %leadsfactory.internal_email_patterns%]

  search.utils:
    class:        Tellaw\LeadsFactoryBundle\Utils\ElasticSearchUtils
    calls:
                  - [ setContainer, [ @service_container ] ]

  leadsfactory.twig_extension:
    class: Tellaw\LeadsFactoryBundle\Twig\LeadsFactoryExtension
    arguments: [@form_utils, @leadsfactory.reference_list_repository]
    tags:
      - { name: twig.extension }

  leadsfactory.twig_stringloader_extension:
      class: Twig_Extension_StringLoader
      tags:
        - { name: twig.extension }

  leadsfactory.leads_repository:
    class: Tellaw\LeadsFactoryBundle\Entity\LeadsRepository
    factory_service: doctrine.orm.default_entity_manager
    factory_method: getRepository
    arguments: ['TellawLeadsFactoryBundle:Leads']

  leadsfactory.form_repository:
    class: Tellaw\LeadsFactoryBundle\Entity\FormRepository
    factory_service: doctrine.orm.default_entity_manager
    factory_method: getRepository
    arguments: ['TellawLeadsFactoryBundle:Form']
    calls:
      - [setInternalEmailPatterns, [%leadsfactory.internal_email_patterns%]]

  leadsfactory.form_type_repository:
    class: Tellaw\LeadsFactoryBundle\Entity\FormTypeRepository
    factory_service: doctrine.orm.default_entity_manager
    factory_method: getRepository
    arguments: ['TellawLeadsFactoryBundle:FormType']
    calls:
      - [setInternalEmailPatterns, [%leadsfactory.internal_email_patterns%]]

  leadsfactory.extract_field_command:
    class: Tellaw\LeadsFactoryBundle\Command\ExtractFieldCommand
    arguments: [@doctrine.orm.entity_manager]
    tags:
    - { name: console.command }

  leadsfactory.reference_list_repository:
    class: Tellaw\LeadsFactoryBundle\Entity\ReferenceListRepository
    factory_service: doctrine.orm.default_entity_manager
    factory_method: getRepository
    arguments: ['TellawLeadsFactoryBundle:ReferenceList']

  leadsfactory.reference_list_element_repository:
      class: Tellaw\LeadsFactoryBundle\Entity\ReferenceListElementRepository
      factory_service: doctrine.orm.default_entity_manager
      factory_method: getRepository
      arguments: ['TellawLeadsFactoryBundle:ReferenceListElement']
      calls:
       - [setLogger, [@export.logger]]

  leadsfactory.client_email_repository:
      class: Tellaw\LeadsFactoryBundle\Entity\ClientEmailRepository
      factory_service: doctrine.orm.default_entity_manager
      factory_method: getRepository
      arguments: ['TellawLeadsFactoryBundle:ClientEmail']

  leadsfactory.export_repository:
      class: Tellaw\LeadsFactoryBundle\Entity\ExportRepository
      factory_service: doctrine.orm.default_entity_manager
      factory_method: getRepository
      arguments: ['TellawLeadsFactoryBundle:Export']

  leadsfactory.scheduled_status_history:
    class: Tellaw\LeadsFactoryBundle\Utils\ScheduledJobs\StatusHistoryScheduler
    tags:
    - { name: scheduled.job }

  leadsfactory.scheduled_export_job:
    class: Tellaw\LeadsFactoryBundle\Utils\ScheduledJobs\ExportScheduler
    tags:
    - { name: scheduled.job }

  leadsfactory.search_watchdog_job:
    class: Tellaw\LeadsFactoryBundle\Utils\ScheduledJobs\SearchWatchdogScheduler
    tags:
    - { name: scheduled.job }

  leadsfactory.export_mock_success:
    class: Tellaw\LeadsFactoryBundle\Utils\Export\MockExport
    calls:
      - [setContainer, [@service_container]]
    tags:
      - {name: export.method, alias: mockExportSuccess}
    arguments: ['1']

  leadsfactory.export_mock_error:
    class: Tellaw\LeadsFactoryBundle\Utils\Export\MockExport
    calls:
      - [setContainer, [@service_container]]
    tags:
      - {name: export.method, alias: mockExportError}
    arguments: ['-1']

  leadsfactory.export_mock_exception:
    class: Tellaw\LeadsFactoryBundle\Utils\Export\MockExport
    calls:
      - [setContainer, [@service_container]]
    tags:
      - {name: export.method, alias: mockExportException}
    arguments: ['2']