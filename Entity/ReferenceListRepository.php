<?php

namespace Tellaw\LeadsFactoryBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ExportRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReferenceListRepository extends EntityRepository
{

    /**
     * @param $keyword
     * @param int $page
     * @param int $limit
     * @return Paginator
     */
    public function getList($page=1, $limit=10, $keyword='', $params=array())
    {

        $dql = 'SELECT f FROM TellawLeadsFactoryBundle:ReferenceList f';

        if(!empty($keyword)){
            $where = ' WHERE';
            $keywords = explode(' ', $keyword);
            foreach($keywords as $key => $keyword){
                if($key>0)
                    $where .= ' AND';
                $where .= " f.name LIKE '%".$keyword."%'";
            }
            $dql .= $where;
        }

        $query = $this->getEntityManager()
            ->createQuery($dql)
            ->setFirstResult(($page-1) * $limit)
            ->setMaxResults($limit);

        return new Paginator($query);
    }

	/**
	 * @param string $code
	 * @param array $values
	 *
	 * @return string
	 */
	public function getCommaSeparatedNames($code, $values)
	{
		$qb = $this->getEntityManager()->createQueryBuilder();
		$qb->select('e.name')
			->from('TellawLeadsFactoryBundle:ReferenceListElement', 'e')
			->join('TellawLeadsFactoryBundle:ReferenceList', 'l')
			->where('l.code = :code')
			->andWhere('e.value IN (:values)')
			->setParameter('code', $code)
			->setParameter('values', $values)
		;
		$names = $qb->getQuery()->getScalarResult();

		$n = count($names);
		if ($n === 0) {
			return '';
		}

		$val = $names[1];
		for ($i=1; $i<$n; ++$i) {
			$val .= ','.$names[$i];
		}
		return $val;
	}
}
